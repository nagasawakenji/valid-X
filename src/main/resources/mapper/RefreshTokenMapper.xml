<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Nagasawa.valid_X.infra.mybatis.mapper.RefreshTokenMapper">

    <resultMap id="RefreshTokenMap" type="Nagasawa.valid_X.domain.model.RefreshToken">
        <id     property="id"          column="id"/>
        <result property="userId"      column="user_id"/>
        <result property="sessionId"   column="session_id"/>
        <result property="issuedAt"    column="issued_at"/>
        <result property="expiresAt"   column="expires_at"/>
        <result property="rotatedFrom" column="rotated_from"/>
        <result property="revokedAt"   column="revoked_at"/>
    </resultMap>

    <insert id="insert"
            parameterType="Nagasawa.valid_X.domain.model.RefreshToken"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO refresh_tokens (
        user_id, session_id, issued_at, expires_at, rotated_from, revoked_at
        ) VALUES (
        #{userId},
        #{sessionId},
        #{issuedAt},
        #{expiresAt},
        #{rotatedFrom},
        #{revokedAt}
        )
        RETURNING id
    </insert>

    <select id="findById" resultMap="RefreshTokenMap">
        SELECT id, user_id, session_id, issued_at, expires_at, rotated_from, revoked_at
        FROM refresh_tokens
        WHERE id = #{id}
    </select>

    <select id="findActiveById" resultMap="RefreshTokenMap">
        SELECT id, user_id, session_id, issued_at, expires_at, rotated_from, revoked_at
        FROM refresh_tokens
        WHERE id = #{id} AND revoked_at is NULL
    </select>

    <update id="revoke">
        UPDATE refresh_tokens
        SET revoked_at = #{ts}
        WHERE id = #{id} AND revoked_at IS NULL
    </update>

    <update id="revokeBySession">
        UPDATE refresh_tokens
        SET revoked_at = #{ts}
        WHERE session_id = #{sessionId} AND revoked_at IS NULL
    </update>

    <delete id="deleteExpired">
        DELETE FROM refresh_tokens
        WHERE expires_at &lt; #{before}
    </delete>

</mapper>